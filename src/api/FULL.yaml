openapi: 3.0.0
info:
  title: Mock API
  version: 1.0.0
  description: Mock API for breaking news, investigation articles, reports, trending topics, and newsletter subscriptions

paths:
  /breaking-news:
    get:
      summary: Get breaking news
      operationId: getBreakingNews
      responses:
        '200':
          description: A list of breaking news
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BreakingNews'
    post:
      summary: Create a new breaking news article
      operationId: createBreakingNews
      requestBody:
        description: Breaking news article to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakingNews'
      responses:
        '201':
          description: Breaking news article created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakingNews'
  /breaking-news/{_id}:
    get:
      summary: Get breaking news detail
      operationId: getBreakingNewsDetail
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Breaking news detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakingNewsDetail'
        '404':
          description: News not found
    put:
      summary: Update a breaking news article
      operationId: updateBreakingNews
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Breaking news article to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreakingNews'
      responses:
        '200':
          description: Breaking news article updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakingNews'
        '404':
          description: News not found
    delete:
      summary: Delete a breaking news article
      operationId: deleteBreakingNews
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Breaking news article deleted
  /investigations:
    get:
      summary: Get investigation articles
      operationId: getInvestigationArticles
      responses:
        '200':
          description: A list of investigation articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvestigationArticle'
    post:
      summary: Create a new investigation article
      operationId: createInvestigationArticle
      requestBody:
        description: Investigation article to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigationArticle'
      responses:
        '201':
          description: Investigation article created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigationArticle'
  /investigation/{_id}:
    get:
      summary: Get investigation article detail
      operationId: getInvestigationArticleDetail
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Investigation article detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigationArticleDetail'
        '404':
          description: Article not found
    put:
      summary: Update an investigation article
      operationId: updateInvestigationArticle
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Investigation article to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigationArticle'
      responses:
        '200':
          description: Investigation article updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigationArticle'
        '404':
          description: Article not found
    delete:
      summary: Delete an investigation article
      operationId: deleteInvestigationArticle
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Investigation article deleted
  /investigation/{_id}/comments:
    get:
      summary: Get comments for an investigation article
      operationId: getComments
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      summary: Add a comment to an investigation article
      operationId: addComment
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Comment to add
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
      responses:
        '201':
          description: Comment added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
  /reports:
    get:
      summary: Get reports
      operationId: getReports
      responses:
        '200':
          description: A list of reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
    post:
      summary: Create a new report
      operationId: createReport
      requestBody:
        description: Report to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          description: Report created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
  /reports/{_id}:
    get:
      summary: Get report detail
      operationId: getReportDetail
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDetail'
        '404':
          description: Report not found
    put:
      summary: Update a report
      operationId: updateReport
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Report to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: Report updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '404':
          description: Report not found
    delete:
      summary: Delete a report
      operationId: deleteReport
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Report deleted
 /trending-topics:
    get:
      summary: Get all trending topics
      responses:
        '200':
          description: A list of trending topics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrendingTopic'
    post:
      summary: Create a new trending topic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrendingTopic'
      responses:
        '201':
          description: Trending topic created
  /trending-topics/{_id}:
    get:
      summary: Get a trending topic by _id
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A trending topic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingTopic'
    put:
      summary: Update a trending topic by _id
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrendingTopic'
      responses:
        '200':
          description: Trending topic updated
    delete:
      summary: Delete a trending topic by _id
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trending topic deleted
components:
  schemas:
    TrendingTopic:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the trending topic
        topic:
          type: string
          description: The trending topic
      required:
        - topic
    delete:
      summary: Delete a trending topic
      operationId: deleteTrendingTopic
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Trending topic deleted
  /data-visualization:
    get:
      summary: Get data visualization
      operationId: getDataVisualization
      responses:
        '200':
          description: Data visualization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataVisualization'
    post:
      summary: Add data visualization
      operationId: addDataVisualization
      requestBody:
        description: Data visualization to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataVisualization'
      responses:
        '201':
          description: Data visualization added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataVisualization'
  /data-visualization/{name}:
    delete:
      summary: Delete a data visualization
      operationId: deleteDataVisualization
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Data visualization deleted
  /subscribe:
    post:
      summary: Subscribe to newsletter
      operationId: subscribeNewsletter
      requestBody:
        description: Email to subscribe
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Subscription successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

components:
  schemas:
    BreakingNews:
      type: object
      properties:
        _id:
          type: integer
        title:
          type: string
        summary:
          type: string
        timestamp:
          type: string
          format: date-time
        category:
          type: string
        trending:
          type: integer
        showInBar:
          type: boolean
    BreakingNewsDetail:
      allOf:
        - $ref: '#/components/schemas/BreakingNews'
        - type: object
          properties:
            content:
              type: string
            author:
              type: string
            likes:
              type: integer
            comments:
              type: integer
            relatedNews:
              type: array
              items:
                $ref: '#/components/schemas/RelatedNews'
    RelatedNews:
      type: object
      properties:
        _id:
          type: integer
        title:
          type: string
    InvestigationArticle:
      type: object
      properties:
        _id:
          type: integer
        title:
          type: string
        summary:
          type: string
        image:
          type: string
        author:
          type: string
        date:
          type: string
          format: date
        readTime:
          type: integer
        views:
          type: integer
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        isFeatured:
          type: boolean
        isBreaking:
          type: boolean
    InvestigationArticleDetail:
      allOf:
        - $ref: '#/components/schemas/InvestigationArticle'
        - type: object
          properties:
            subtitle:
              type: string
            content:
              type: string
            likes:
              type: integer
    Comment:
      type: object
      properties:
        _id:
          type: integer
        user:
          type: string
        comment:
          type: string
        date:
          type: string
          format: date
    Report:
      type: object
      properties:
        _id:
          type: integer
        title:
          type: string
        date:
          type: string
          format: date
        summary:
          type: string
    ReportDetail:
      allOf:
        - $ref: '#/components/schemas/Report'
        - type: object
          properties:
            content:
              type: string
            author:
              type: string
            timestamp:
              type: string
              format: date-time
            category:
              type: string
            trending:
              type: integer
            likes:
              type: integer
            comments:
              type: integer
            relatedReports:
              type: array
              items:
                $ref: '#/components/schemas/RelatedReport'
    RelatedReport:
      type: object
      properties:
        _id:
          type: integer
        title:
          type: string
    DataVisualization:
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
